y=playData()$yardline_100,
type = 'scatter',
mode = 'lines',
fill = 'tozeroy'
)
)
# reg %>%
#     plot_ly(x=reg$game_seconds_remaining, y=reg$yardline_100, type = 'scatter', mode = 'lines', fill = 'tozeroy')
# Next steps:
# Filter down data, maybe on initial read to speed up plots/document
# Incorporate down into selection/switch statement for reactive data
# Calculate play type percentage, filter data on time remaining
# Add filled area plots
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(shiny)
library(plotly)
pre = readRDS("D:/Priyam/Desktop/INFO550_Final/code/pre_seasons.rds")
reg = readRDS("D:/Priyam/Desktop/INFO550_Final/code/reg_seasons.rds")
post = readRDS("D:/Priyam/Desktop/INFO550_Final/code/post_seasons.rds")
test = reg %>%
filter(year == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type)
test = reg %>%
filter(Seaseon == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type)
View(test)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
reshape(test, idvar = 'yardline_100', timevar = 'play_type', dir = 'w')
blah = reshape(test, idvar = 'yardline_100', timevar = 'play_type', dir = 'w')
View(blah)
library(reshape)
install.packages('reshape')
library(reshape)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
modify_if(is.character, as.factor) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
library(tidyverse)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
modify_if(is.character, as.factor) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
library(forcats)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
fct_explicit_na() %>%
modify_if(is.character, as.factor) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
fct_explicit_na(play_type) %>%
modify_if(is.character, as.factor) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
modify_if(is.character, as.factor) %>%
fct_explicit_na(play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
mutate_if(is.factor,
fct_explicit_na,
na_level = "to_impute") %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
mutate_if(is.factor,
fct_explicit_na,
na_level = "to_impute")
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type)
levels(test$play_type)
factor(test$play_type)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n())
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
complete(play_type, nesting(yardline_100))
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100))
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0))
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n())
reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
group_by(yardline_100, play_type, .drop = F)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
group_by(yardline_100, play_type, .drop = F)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
, .drop = F
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type, .drop = F) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
# test dataset
blah = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type)
View(blah)
table(blah$play_type)
test %>% group_by(play_type) %>% summarize(n())
test %>% ungroup() %>% group_by(play_type) %>% summarize(n())
sum(test$plays)
test %>% group_by(play_type) %>% summarize(aldsf = sum(plays))
table(blah$play_type)
# test end dataset
test = reg %>%
filter(Season == 2019) %>%
filter(down == 3, game_seconds_remaining <= 900) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
table(blah$play_type)
test %>% group_by(play_type) %>% summarize(aldsf = sum(plays))
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
summarize(play_pct = plays/sum(plays))
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100)
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = plays/sum(plays))
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100)
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type + play_pct)
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type+play_pct)
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type)
test$field_goal
test %>% plot_ly(
x=~yardline_100,
y=~field_goal,
name = "Field Goal",
type = 'scatter',
mode = 'lines',
fill = 'tozeroy'
)
# https://rmarkdown.rstudio.com/lesson-14.html
selectInput("type", "Choose a game type",
choices = c("Preseason", "Regular Season", "Postseason"))
selectInput("year", "Choose a season",
choices = c("2009-2010" = 2009,
"2010-2011" = 2010,
"2011-2012" = 2011,
"2012-2013" = 2012,
"2013-2014" = 2013,
"2014-2015" = 2014,
"2015-2016" = 2015,
"2016-2017" = 2016,
"2017-2018" = 2017,
"2018-2019" = 2018,
"2019-2020" = 2019
))
selectInput("dwn", "Choose a down",
choices = c("1st Down", "2nd Down", "3rd Down", "4th Down"))
sliderInput("time", "Maximum time remaining in game:",
min = 0, max = 60,
value = 1, step = 5,
animate =
animationOptions(interval = 300, loop = TRUE))
playData = reactive({
req(input$dwn)
req(input$year)
req(input$time)
switch(input$type,
"Preseason" = pre %>%
filter(Season == input$year, down == input$dwn, game_seconds_remaining <= input$time) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type),
"Regular Season" = reg %>%
filter(Season == input$year, down == input$dwn, game_seconds_remaining <= input$time) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type),
"Postseason" = post %>%
filter(Season == input$year, down == input$dwn, game_seconds_remaining <= input$time) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type))
})
# https://plotly.com/r/filled-area-plots
# For example, being on your own 20 yard line means you are 80 yards from their end zone, but being on their 20 yard line means you are 20 yards from their end zone.
test2 = playData() %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type)
test2
renderPlotly(
playData() %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type) %>%
plot_ly(
x=~yardline_100,
y=~field_goal,
name = "Field Goal",
type = 'scatter',
mode = 'lines',
fill = 'tozeroy'
)
)
# # test dataset
# blah = reg %>%
#   filter(Season == 2019) %>%
#   filter(down == 3, game_seconds_remaining <= 900) %>%
#   select(Season, game_seconds_remaining, down, yardline_100, play_type)
#
# # test end dataset
# test = reg %>%
#   filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
#   select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
#   group_by(yardline_100, play_type) %>%
#   summarize(plays = n()) %>%
#   ungroup() %>%
#   complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
#   arrange(yardline_100) %>%
#   group_by(yardline_100) %>%
#   mutate(play_pct = (plays/sum(plays))*100) %>%
#   cast(yardline_100~play_type)
test %>% plot_ly(
x=~yardline_100,
y=~field_goal,
name = "Field Goal",
type = 'scatter',
mode = 'lines',
fill = 'tozeroy'
)
# reg %>%
#     plot_ly(x=reg$game_seconds_remaining, y=reg$yardline_100, type = 'scatter', mode = 'lines', fill = 'tozeroy')
# Next steps:
# Filter down data, maybe on initial read to speed up plots/document
# Incorporate down into selection/switch statement for reactive data
# Calculate play type percentage, filter data on time remaining
# Add filled area plots
table(pre$play_type)
table(pre$play_type[!is.na(pre$down)])
# # test dataset
# blah = reg %>%
#   filter(Season == 2019) %>%
#   filter(down == 3, game_seconds_remaining <= 900) %>%
#   select(Season, game_seconds_remaining, down, yardline_100, play_type)
#
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type)
reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100)
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100)
# # test dataset
# blah = reg %>%
#   filter(Season == 2019) %>%
#   filter(down == 3, game_seconds_remaining <= 900) %>%
#   select(Season, game_seconds_remaining, down, yardline_100, play_type)
#
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type, value = plays)
# # test dataset
# blah = reg %>%
#   filter(Season == 2019) %>%
#   filter(down == 3, game_seconds_remaining <= 900) %>%
#   select(Season, game_seconds_remaining, down, yardline_100, play_type)
#
# test end dataset
test = reg %>%
filter(Season == 2019, down == 3, game_seconds_remaining <= 900, !is.na(play_type)) %>%
select(Season, game_seconds_remaining, down, yardline_100, play_type) %>%
group_by(yardline_100, play_type) %>%
summarize(plays = n()) %>%
ungroup() %>%
complete(play_type, nesting(yardline_100), fill = list(plays = 0)) %>%
arrange(yardline_100) %>%
group_by(yardline_100) %>%
mutate(play_pct = (plays/sum(plays))*100) %>%
cast(yardline_100~play_type, value = 'plays')
